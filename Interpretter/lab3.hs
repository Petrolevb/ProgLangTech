-- automatically generated by BNF Converter
module Main where


import System.Environment ( getArgs )
import System.Exit (exitFailure)

import AbsFunc
import LexFunc
import ParFunc

import Interpretter

import ErrM


check :: String -> IO ()
check s = case pFuncs (myLexer s) of
            Bad err  -> do putStrLn "SYNTAX ERROR"
                           putStrLn err
                           exitFailure 
            Ok  tree ->  interpret tree

main :: IO ()
main = do args <- getArgs
          case args of
            [file] -> readFile file >>= check
            _      -> do putStrLn "Usage: lab3 <SourceFile>"
                         exitFailure





